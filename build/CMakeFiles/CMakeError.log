Looking for a CUDA compiler failed with the following output:
-- The CUDA compiler identification is unknown
-- Check for working CUDA compiler: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.1/bin/nvcc.exe
-- Check for working CUDA compiler: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.1/bin/nvcc.exe - broken
CMake Error at C:/Program Files/CMake/share/cmake-3.17/Modules/CMakeTestCUDACompiler.cmake:46 (message):
  The CUDA compiler

    "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.1/bin/nvcc.exe"

  is not able to compile a simple test program.

  It fails with the following output:

    Change Dir: E:/sandbox/mayaProj/thirdparty/build/cpp-taskflow/CMakeFiles/CheckCUDA/CMakeFiles/CMakeTmp
    
    Run Build Command(s):C:/bin/ninja.exe cmTC_fcbb6 && [1/2] Building CUDA object CMakeFiles\cmTC_fcbb6.dir\main.cu.obj
    FAILED: CMakeFiles/cmTC_fcbb6.dir/main.cu.obj 
    cmd.exe /C "C:\PROGRA~1\NVIDIA~2\CUDA\v10.1\bin\nvcc.exe     -x cu -c main.cu -o CMakeFiles\cmTC_fcbb6.dir\main.cu.obj && C:\PROGRA~1\NVIDIA~2\CUDA\v10.1\bin\nvcc.exe     -x cu -M main.cu -MT CMakeFiles\cmTC_fcbb6.dir\main.cu.obj -o CMakeFiles\cmTC_fcbb6.dir\main.cu.obj.d"
    nvcc fatal   : Cannot find compiler 'cl.exe' in PATH
    ninja: build stopped: subcommand failed.
    
    

  

  CMake will not be able to correctly generate this project.
Call Stack (most recent call first):
  CMakeLists.txt:2 (project)


-- Configuring incomplete, errors occurred!
See also "E:/sandbox/mayaProj/thirdparty/build/cpp-taskflow/CMakeFiles/CheckCUDA/CMakeFiles/CMakeOutput.log".
See also "E:/sandbox/mayaProj/thirdparty/build/cpp-taskflow/CMakeFiles/CheckCUDA/CMakeFiles/CMakeError.log".

Determining if the include file pthread.h exists failed with the following output:
Change Dir: E:/sandbox/mayaProj/thirdparty/build/CMakeFiles/CMakeTmp

Run Build Command(s):C:/bin/ninja.exe cmTC_8f7a1 && [1/2] Building C object CMakeFiles/cmTC_8f7a1.dir/CheckIncludeFile.c.obj
FAILED: CMakeFiles/cmTC_8f7a1.dir/CheckIncludeFile.c.obj 
C:\PROGRA~1\LLVM\bin\clang.exe   -g -Xclang -gcodeview -O0 -D_DEBUG -D_DLL -D_MT -Xclang --dependent-lib=msvcrtd -MD -MT CMakeFiles/cmTC_8f7a1.dir/CheckIncludeFile.c.obj -MF CMakeFiles\cmTC_8f7a1.dir\CheckIncludeFile.c.obj.d -o CMakeFiles/cmTC_8f7a1.dir/CheckIncludeFile.c.obj   -c CheckIncludeFile.c
CheckIncludeFile.c:1:10: fatal error: 'pthread.h' file not found
#include <pthread.h>
         ^~~~~~~~~~~
1 error generated.
ninja: build stopped: subcommand failed.



Determining if the CL_VERSION_2_2 exist failed with the following output:
Change Dir: E:/sandbox/mayaProj/thirdparty/build/CMakeFiles/CMakeTmp

Run Build Command(s):C:/bin/ninja.exe cmTC_431a3 && [1/2] Building C object CMakeFiles/cmTC_431a3.dir/CheckSymbolExists.c.obj
FAILED: CMakeFiles/cmTC_431a3.dir/CheckSymbolExists.c.obj 
C:\PROGRA~1\LLVM\bin\clang.exe  -I"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.1/include" -g -Xclang -gcodeview -O0 -D_DEBUG -D_DLL -D_MT -Xclang --dependent-lib=msvcrtd -MD -MT CMakeFiles/cmTC_431a3.dir/CheckSymbolExists.c.obj -MF CMakeFiles\cmTC_431a3.dir\CheckSymbolExists.c.obj.d -o CMakeFiles/cmTC_431a3.dir/CheckSymbolExists.c.obj   -c CheckSymbolExists.c
CheckSymbolExists.c:8:19: error: use of undeclared identifier 'CL_VERSION_2_2'
  return ((int*)(&CL_VERSION_2_2))[argc];
                  ^
1 error generated.
ninja: build stopped: subcommand failed.


File E:/sandbox/mayaProj/thirdparty/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.1/include/CL/cl.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef CL_VERSION_2_2
  return ((int*)(&CL_VERSION_2_2))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the CL_VERSION_2_1 exist failed with the following output:
Change Dir: E:/sandbox/mayaProj/thirdparty/build/CMakeFiles/CMakeTmp

Run Build Command(s):C:/bin/ninja.exe cmTC_74e7c && [1/2] Building C object CMakeFiles/cmTC_74e7c.dir/CheckSymbolExists.c.obj
FAILED: CMakeFiles/cmTC_74e7c.dir/CheckSymbolExists.c.obj 
C:\PROGRA~1\LLVM\bin\clang.exe  -I"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.1/include" -g -Xclang -gcodeview -O0 -D_DEBUG -D_DLL -D_MT -Xclang --dependent-lib=msvcrtd -MD -MT CMakeFiles/cmTC_74e7c.dir/CheckSymbolExists.c.obj -MF CMakeFiles\cmTC_74e7c.dir\CheckSymbolExists.c.obj.d -o CMakeFiles/cmTC_74e7c.dir/CheckSymbolExists.c.obj   -c CheckSymbolExists.c
CheckSymbolExists.c:8:19: error: use of undeclared identifier 'CL_VERSION_2_1'
  return ((int*)(&CL_VERSION_2_1))[argc];
                  ^
1 error generated.
ninja: build stopped: subcommand failed.


File E:/sandbox/mayaProj/thirdparty/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.1/include/CL/cl.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef CL_VERSION_2_1
  return ((int*)(&CL_VERSION_2_1))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the CL_VERSION_2_0 exist failed with the following output:
Change Dir: E:/sandbox/mayaProj/thirdparty/build/CMakeFiles/CMakeTmp

Run Build Command(s):C:/bin/ninja.exe cmTC_8603f && [1/2] Building C object CMakeFiles/cmTC_8603f.dir/CheckSymbolExists.c.obj
FAILED: CMakeFiles/cmTC_8603f.dir/CheckSymbolExists.c.obj 
C:\PROGRA~1\LLVM\bin\clang.exe  -I"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.1/include" -g -Xclang -gcodeview -O0 -D_DEBUG -D_DLL -D_MT -Xclang --dependent-lib=msvcrtd -MD -MT CMakeFiles/cmTC_8603f.dir/CheckSymbolExists.c.obj -MF CMakeFiles\cmTC_8603f.dir\CheckSymbolExists.c.obj.d -o CMakeFiles/cmTC_8603f.dir/CheckSymbolExists.c.obj   -c CheckSymbolExists.c
CheckSymbolExists.c:8:19: error: use of undeclared identifier 'CL_VERSION_2_0'
  return ((int*)(&CL_VERSION_2_0))[argc];
                  ^
1 error generated.
ninja: build stopped: subcommand failed.


File E:/sandbox/mayaProj/thirdparty/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.1/include/CL/cl.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef CL_VERSION_2_0
  return ((int*)(&CL_VERSION_2_0))[argc];
#else
  (void)argc;
  return 0;
#endif
}
